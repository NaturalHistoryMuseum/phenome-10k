"""Initial tables

Revision ID: ef6bd83f563f
Revises:
Create Date: 2019-03-25 10:59:20.639224

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ef6bd83f563f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('publication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('date_modified', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('title', sa.String(length=250), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('url_slug', sa.String(length=250), nullable=True),
    sa.Column('pub_year', sa.Integer(), nullable=True),
    sa.Column('authors', sa.String(length=250), nullable=True),
    sa.Column('journal', sa.String(length=250), nullable=True),
    sa.Column('link', sa.String(length=250), nullable=True),
    sa.Column('abstract', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_publication_url_slug'), 'publication', ['url_slug'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=250), nullable=True),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    userTbl = op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('date_registered', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('role', sa.Enum('USER', 'CONTRIBUTOR', 'ADMIN'), server_default='USER', nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('user_type', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.execute(userTbl.insert().values(
      name='Administrator',
      email='admin',
      password='$argon2i$v=19$m=102400,t=2,p=8$aQ0BoNR6T6m1FgKg1Hpv7Q$FJu5Yl0rRIZkfVtHwBFTTw',
      role='ADMIN'
    ))
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=False)
    op.create_table('file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=250), nullable=True),
    sa.Column('filename', sa.String(length=250), nullable=True),
    sa.Column('location', sa.String(length=250), nullable=True),
    sa.Column('date_created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=250), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_date_created'), 'file', ['date_created'], unique=False)
    op.create_table('publication_file',
    sa.Column('publication_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['publication_id'], ['publication.id'], ),
    sa.PrimaryKeyConstraint('file_id')
    )
    op.create_table('scan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gbif_id', sa.Integer(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('scientific_name', sa.String(length=250), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('url_slug', sa.String(length=250), nullable=True),
    sa.Column('alt_name', sa.String(length=250), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.Column('specimen_id', sa.String(length=250), nullable=True),
    sa.Column('specimen_location', sa.String(length=250), nullable=True),
    sa.Column('specimen_link', sa.String(length=250), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scan_date_created'), 'scan', ['date_created'], unique=False)
    op.create_index(op.f('ix_scan_scientific_name'), 'scan', ['scientific_name'], unique=False)
    op.create_index(op.f('ix_scan_url_slug'), 'scan', ['url_slug'], unique=True)
    op.create_table('scan_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('scan_id', sa.Integer(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['scan_id'], ['scan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan_publication',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('scan_id', sa.Integer(), nullable=True),
    sa.Column('publication_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['publication_id'], ['publication.id'], ),
    sa.ForeignKeyConstraint(['scan_id'], ['scan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scan_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('scan_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['scan_id'], ['scan.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scan_tag')
    op.drop_table('scan_publication')
    op.drop_table('scan_attachment')
    op.drop_index(op.f('ix_scan_url_slug'), table_name='scan')
    op.drop_index(op.f('ix_scan_scientific_name'), table_name='scan')
    op.drop_index(op.f('ix_scan_date_created'), table_name='scan')
    op.drop_table('scan')
    op.drop_table('publication_file')
    op.drop_index(op.f('ix_file_date_created'), table_name='file')
    op.drop_table('file')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('tag')
    op.drop_index(op.f('ix_publication_url_slug'), table_name='publication')
    op.drop_table('publication')
    # ### end Alembic commands ###
