---
- name: Check for RabbitMQ repofile
  stat:
    path: /etc/yum.repos.d/rabbitmq_rabbitmq-server.repo
  register: rabbitmq_repofile

- name: Check for Erlang repofile
  stat:
    path: /etc/yum.repos.d/rabbitmq_erlang.repo
  register: erlang_repofile

- name: Create RabbitMQ repofile
  shell: |
    curl -LsS "{{ rabbitmq_setup_script }}" | bash -s --
  args:
    executable: "/bin/bash"
  when: not rabbitmq_repofile.stat.exists
  become: y

- name: Create Erlang repofile
  shell: |
    curl -LsS "{{ erlang_setup_script }}" | bash -s --
  args:
    executable: "/bin/bash"
  when: not erlang_repofile.stat.exists
  become: y

- name: install Erlang
  yum:
    name: erlang
    state: present
    enablerepo: rabbitmq_erlang
  become: y

- name: install RabbitMQ
  yum:
    name: rabbitmq-server
    state: present
    enablerepo: rabbitmq_rabbitmq-server
  become: y

- name: Copy RabbitMQ config file
  template:
    src: rabbitmq.conf.j2
    dest: '/etc/rabbitmq/rabbitmq.conf'
  become: y
  notify:
    - restart rabbitmq

- name: Start/enable RabbitMQ
  systemd:
    name: rabbitmq-server.service
    state: started
    enabled: y
  become: y

- name: Enable RabbitMQ management plugin
  rabbitmq_plugin:
    names: rabbitmq_management
    state: enabled
  become: y

- name: Add RabbitMQ user
  rabbitmq_user:
    user: '{{ p10k_db_user }}'
    password: '{{ p10k_db_password }}'
    vhost: /
    configure_priv: .*
    read_priv: .*
    write_priv: .*
    state: present
  become: y

- name: Delete RabbitMQ guest user
  rabbitmq_user:
    user: guest
    state: absent
  become: y

- name: Install Redis
  yum:
    name:
      - redis
    state: present
  become: yes
  notify:
    - restart redis

- name: Start/enable Redis
  systemd:
    name: redis.service
    state: started
    enabled: y
  become: y

- name: Create the celery service
  template:
    src: celery.service.j2
    dest: /etc/systemd/system/celery.service
  become: y
  notify:
    - restart celery

- name: Enable celery service
  systemd:
    name: celery.service
    state: started
    enabled: y
  become: y

- name: Create the flower service
  template:
    src: flower.service.j2
    dest: /etc/systemd/system/flower.service
  become: y
  notify:
    - restart flower

- name: Enable flower service
  systemd:
    name: flower.service
    state: started
    enabled: y
  become: y
