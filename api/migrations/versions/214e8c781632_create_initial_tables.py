"""
Create initial tables.

Revision ID: 214e8c781632
Revises:
Create Date: 2019-05-16 15:36:14.097479
"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '214e8c781632'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'publication',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('author_id', sa.Integer(), nullable=True),
        sa.Column(
            'date_created',
            sa.DateTime(),
            server_default=sa.text('CURRENT_TIMESTAMP'),
            nullable=True,
        ),
        sa.Column(
            'date_modified',
            sa.DateTime(),
            server_default=sa.text('CURRENT_TIMESTAMP'),
            nullable=True,
        ),
        sa.Column('title', sa.String(length=250), nullable=True),
        sa.Column('published', sa.Boolean(), nullable=True),
        sa.Column('url_slug', sa.String(length=250), nullable=True),
        sa.Column('pub_year', sa.Integer(), nullable=True),
        sa.Column('authors', sa.String(length=250), nullable=True),
        sa.Column('journal', sa.String(length=250), nullable=True),
        sa.Column('link', sa.String(length=250), nullable=True),
        sa.Column('abstract', sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('publication', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_publication_url_slug'), ['url_slug'], unique=False
        )

    op.create_table(
        'tag',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('category', sa.String(length=250), nullable=False),
        sa.Column('name', sa.String(length=250), nullable=False),
        sa.Column('taxonomy', sa.String(length=250), nullable=True),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['parent_id'],
            ['tag.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('taxonomy'),
    )
    op.create_table(
        'taxonomy',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=250), nullable=False),
        sa.Column('parent_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['parent_id'],
            ['taxonomy.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'user',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=64), nullable=True),
        sa.Column('email', sa.String(length=120), nullable=True),
        sa.Column('password', sa.String(length=128), nullable=True),
        sa.Column(
            'date_registered',
            sa.DateTime(),
            server_default=sa.text('CURRENT_TIMESTAMP'),
            nullable=True,
        ),
        sa.Column(
            'role',
            sa.Enum('USER', 'CONTRIBUTOR', 'ADMIN'),
            server_default='USER',
            nullable=True,
        ),
        sa.Column('country_code', sa.String(length=2), nullable=True),
        sa.Column('user_type', sa.String(length=64), nullable=True),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_name'), ['name'], unique=False)

    op.create_table(
        'file',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('filename', sa.String(length=250), nullable=False),
        sa.Column('location', sa.String(length=250), nullable=False),
        sa.Column(
            'date_created',
            sa.DateTime(),
            server_default=sa.text('CURRENT_TIMESTAMP'),
            nullable=True,
        ),
        sa.Column('owner_id', sa.Integer(), nullable=True),
        sa.Column('mime_type', sa.String(length=250), nullable=False),
        sa.Column('size', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['owner_id'],
            ['user.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_file_date_created'), ['date_created'], unique=False
        )

    op.create_table(
        'attachment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=250), nullable=False),
        sa.Column('file_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['file_id'],
            ['file.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'scan',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('gbif_id', sa.Integer(), nullable=True),
        sa.Column('author_id', sa.Integer(), nullable=True),
        sa.Column(
            'date_created',
            sa.DateTime(),
            server_default=sa.text('CURRENT_TIMESTAMP'),
            nullable=True,
        ),
        sa.Column('date_modified', sa.DateTime(), nullable=True),
        sa.Column('scientific_name', sa.String(length=250), nullable=True),
        sa.Column('published', sa.Boolean(), nullable=True),
        sa.Column('url_slug', sa.String(length=250), nullable=True),
        sa.Column('alt_name', sa.String(length=250), nullable=True),
        sa.Column('file_id', sa.Integer(), nullable=True),
        sa.Column('ctm_id', sa.Integer(), nullable=True),
        sa.Column('specimen_id', sa.String(length=250), nullable=True),
        sa.Column('specimen_location', sa.String(length=250), nullable=True),
        sa.Column('specimen_link', sa.String(length=250), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ['author_id'],
            ['user.id'],
        ),
        sa.ForeignKeyConstraint(
            ['ctm_id'],
            ['file.id'],
        ),
        sa.ForeignKeyConstraint(
            ['file_id'],
            ['file.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    with op.batch_alter_table('scan', schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f('ix_scan_date_created'), ['date_created'], unique=False
        )
        batch_op.create_index(
            batch_op.f('ix_scan_scientific_name'), ['scientific_name'], unique=False
        )
        batch_op.create_index(batch_op.f('ix_scan_url_slug'), ['url_slug'], unique=True)

    op.create_table(
        'publication_file',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('publication_id', sa.Integer(), nullable=True),
        sa.Column('attachment_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['attachment_id'],
            ['attachment.id'],
        ),
        sa.ForeignKeyConstraint(
            ['publication_id'],
            ['publication.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'scan_attachment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('scan_id', sa.Integer(), nullable=True),
        sa.Column('attachment_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['attachment_id'],
            ['attachment.id'],
        ),
        sa.ForeignKeyConstraint(
            ['scan_id'],
            ['scan.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'scan_publication',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=250), nullable=True),
        sa.Column('scan_id', sa.Integer(), nullable=True),
        sa.Column('publication_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['publication_id'],
            ['publication.id'],
        ),
        sa.ForeignKeyConstraint(
            ['scan_id'],
            ['scan.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'scan_tag',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('tag_id', sa.Integer(), nullable=True),
        sa.Column('scan_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ['scan_id'],
            ['scan.id'],
        ),
        sa.ForeignKeyConstraint(
            ['tag_id'],
            ['tag.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
    )
    op.create_table(
        'scan_taxonomy',
        sa.Column('taxonomy_id', sa.Integer(), nullable=False),
        sa.Column('scan_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ['scan_id'],
            ['scan.id'],
        ),
        sa.ForeignKeyConstraint(
            ['taxonomy_id'],
            ['taxonomy.id'],
        ),
        sa.PrimaryKeyConstraint('taxonomy_id', 'scan_id'),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scan_taxonomy')
    op.drop_table('scan_tag')
    op.drop_table('scan_publication')
    op.drop_table('scan_attachment')
    op.drop_table('publication_file')
    with op.batch_alter_table('scan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_scan_url_slug'))
        batch_op.drop_index(batch_op.f('ix_scan_scientific_name'))
        batch_op.drop_index(batch_op.f('ix_scan_date_created'))

    op.drop_table('scan')
    op.drop_table('attachment')
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_date_created'))

    op.drop_table('file')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_name'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('taxonomy')
    op.drop_table('tag')
    with op.batch_alter_table('publication', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_publication_url_slug'))

    op.drop_table('publication')
    # ### end Alembic commands ###
